apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "serviceId.name" . }}
  labels:
    app: {{ template "serviceId.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    namespace: "{{ .Release.Namespace }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "serviceId.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "serviceId.name" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
        namespace: "{{ .Release.Namespace }}"
    spec:
      initContainers:
        - name: clear-stale-pid
          image: "{{ .Values.imageRepository }}:{{ .Values.imageTag }}"
          command:
          - "rm"
          - "-vrf"
          - "$KONG_PREFIX/pids"
          envFrom:
            - configMapRef:
                name: {{ template "serviceId.name" . }}
          env:      
            - name: KONG_PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "serviceId.name" . }}
                  key: {{ template "serviceId.name" . }}-password
          volumeMounts:
            - name: {{ template "serviceId.name" . }}-prefix-dir
              mountPath: /kong_prefix/
            - name: {{ template "serviceId.name" . }}-tmp
              mountPath: /tmp
        - name: wait-for-db
          image: "{{ .Values.imageRepository }}:{{ .Values.imageTag }}"
          envFrom:
            - configMapRef:
                name: {{ template "serviceId.name" . }}
          env:      
            - name: KONG_PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "serviceId.name" . }}
                  key: {{ template "serviceId.name" . }}-password
          args: [ "/bin/sh", "-c", "export KONG_NGINX_DAEMON=on; until kong start; do echo 'waiting for db'; sleep 1; done; kong stop; rm -fv '/kong_prefix//stream_rpc.sock'"]        
          volumeMounts:
            - name: {{ template "serviceId.name" . }}-prefix-dir
              mountPath: /kong_prefix/
            - name: {{ template "serviceId.name" . }}-tmp
              mountPath: /tmp
      
      containers:
        - name: {{ template "serviceId.name" . }}
          image: "{{ .Values.imageRepository }}:{{ .Values.imageTag }}"
          imagePullPolicy: {{ .Values.imagepullPolicy }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          ports:
          - name: admin-tls
            containerPort: 8444
            protocol: TCP
          - name: proxy
            containerPort: 8000
            protocol: TCP
          - name: proxy-tls
            containerPort: 8443
            protocol: TCP
          - name: status
            containerPort: 8100
            protocol: TCP
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/sh
                - -c
                - /bin/sleep 15 && kong quit    
          volumeMounts:
            - name: {{ template "serviceId.name" . }}-prefix-dir
              mountPath: /kong_prefix/
            - name: {{ template "serviceId.name" . }}-tmp
              mountPath: /tmp  
          envFrom:
            - configMapRef:
                name: {{ template "serviceId.name" . }}
          env:      
            - name: KONG_PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "serviceId.name" . }}
                  key: {{ template "serviceId.name" . }}-password      

          readinessProbe:
{{ toYaml .Values.readinessProbe | indent 12 }}
          livenessProbe:
{{ toYaml .Values.livenessProbe | indent 12 }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}    
      volumes:
        - name: {{ template "serviceId.name" . }}-prefix-dir
          emptyDir: {}
        - name: {{ template "serviceId.name" . }}-tmp
          emptyDir: {}



